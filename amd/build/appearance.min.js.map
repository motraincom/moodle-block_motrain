{"version":3,"file":"appearance.min.js","sources":["../src/appearance.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Appearance.\n *\n * @copyright  2019 Mootivation Technologies Corp.\n * @author     Frédéric Massart <fred@branchup.tech>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/log'], function(log) {\n\n    var wasSetup = false;\n\n    // Should contain all the values we may be using.\n    var appearance = {\n        thousandssep: ',',\n        pointsimageurl: M.util.image_url('coins', 'block_motrain'),\n    };\n\n    /**\n     * Format coins.\n     *\n     * @param {Number} amount The amount.\n     * @return {String}\n     */\n    function formatCoins(amount) {\n        ensureConfigLoaded();\n\n        var coins = amount;\n        var thousandssep = appearance.thousandssep;\n\n        // Credit: https://stackoverflow.com/a/2901298/867720\n        return coins.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousandssep);\n    }\n\n    /**\n     * Ensure the config is loaded.\n     */\n    function ensureConfigLoaded() {\n        if (wasSetup) {\n            return;\n        }\n        loadConfig();\n        wasSetup = true;\n    }\n\n    /**\n     * Load the config.\n     */\n    function loadConfig() {\n        var node = document.getElementById('block_motrain-appearance-settings-data');\n        try {\n            var config = JSON.parse(node.textContent);\n            appearance = Object.assign({}, appearance, config);\n        } catch (e) {\n            log.warn('Could not load appearance settings');\n        }\n    }\n\n    /**\n     * Setup.\n     *\n     * @deprecated Since Motrain v1.12.1, the config auto loads.\n     */\n    function setup() {\n        ensureConfigLoaded();\n    }\n\n    return {\n        formatCoins: formatCoins,\n        getSettings: function() {\n            ensureConfigLoaded();\n            return appearance;\n        },\n        setup: setup,\n    };\n});\n"],"names":["define","log","wasSetup","appearance","thousandssep","pointsimageurl","M","util","image_url","ensureConfigLoaded","node","document","getElementById","config","JSON","parse","textContent","Object","assign","e","warn","loadConfig","formatCoins","amount","coins","toString","replace","getSettings","setup"],"mappings":";;;;;;;AAuBAA,kCAAO,CAAC,aAAa,SAASC,SAEtBC,UAAW,EAGXC,WAAa,CACbC,aAAc,IACdC,eAAgBC,EAAEC,KAAKC,UAAU,QAAS,2BAsBrCC,qBACDP,2BAWAQ,KAAOC,SAASC,eAAe,kDAE3BC,OAASC,KAAKC,MAAML,KAAKM,aAC7Bb,WAAac,OAAOC,OAAO,GAAIf,WAAYU,QAC7C,MAAOM,GACLlB,IAAImB,KAAK,uCAbbC,GACAnB,UAAW,SAyBR,CACHoB,qBA5CiBC,QACjBd,yBAEIe,MAAQD,OACRnB,aAAeD,WAAWC,oBAGvBoB,MAAMC,WAAWC,QAAQ,wBAAyBtB,eAsCzDuB,YAAa,kBACTlB,qBACON,YAEXyB,iBATAnB"}